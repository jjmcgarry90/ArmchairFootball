package org.gtri.espn;

import org.gtri.helper.NotificationHelper;
import org.gtri.objects.Huddle;
import org.gtri.objects.User.LoginType;
import org.json.JSONObject;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.facebook.android.Util;

/*
 * The hub of interactivity for the app
 */
public class HomeActivity extends Activity {

	// Constants for inter-activity actions
	private static final int CHOICE_SETTINGS = 0;
	public static final int RESULT_LOGOUT = 2;

	private ArmchairQuarterbackApplication context;
	private TextView facebookData, emailData, loginType;
	private Button buttonSettings, buttonNotification;
	private ListView mainMenu;
	private LinearLayout layoutScrolling;
	private ImageView imageViewHeaderLogo;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_activity_home);
		context = (ArmchairQuarterbackApplication) getApplicationContext();

		imageViewHeaderLogo = (ImageView) findViewById(R.id.imageViewLogo);
		imageViewHeaderLogo.setOnClickListener(logoHeaderListener);
		
	//	buttonNotification = (Button) findViewById(R.id.buttonNotification);
	//	buttonNotification.setOnClickListener(notificationListener);
		
		mainMenu = (ListView) findViewById(R.id.listView1);
		mainMenu.setOnItemClickListener(mainListener);


		// This sets up testing information
		//setupLoginType();
		setupFacebook();
		setupEmail();
		
		// Dynamically generate information to be displayed
	//	layoutScrolling = (LinearLayout) findViewById(R.id.layoutScrolling);
		addInformation();
	}
	
	/*
	 * Home Logo and button
	 */
	private OnClickListener logoHeaderListener = new OnClickListener() {
		@Override
		public void onClick(View v) {
			// Back to home screen
			Intent intent = new Intent(getBaseContext(), HomeActivity.class);
			startActivity(intent);
			finish();	
		}
	};
	
	public void addInformation() {
		// Add huddles
		for (Huddle huddle : context.getUser().getCurrentHuddles()) {
			addHuddle(huddle);
		}
	}
	
	public void addHuddle(Huddle huddle) {
		TextView view = new TextView(getBaseContext());
		view.setText(huddle.getName());
		layoutScrolling.addView(view);
	}
    /*
	private void setupLoginType() {
		 //Setup login type
		loginType = (TextView) findViewById(R.id.textViewLoginType);
		if (context.getUser().getLoginType().equals(LoginType.FacebookLogin)) {
			loginType.setText("Login Type: Facebook");
			loginType.setVisibility(TextView.VISIBLE);
		} else if (context.getUser().getLoginType().equals(LoginType.EmailLogin)) {
			loginType.setText("Login Type: Email");
			loginType.setVisibility(TextView.VISIBLE);
		} else {
			Toast.makeText(getBaseContext(), "No user data.", Toast.LENGTH_LONG).show();
		}
	}
	*/
	private void setupFacebook() {
		// Setup facebook test
		facebookData = (TextView) findViewById(R.id.textViewFacebookData);
		if (context.getFacebook().isSessionValid()) {
			try {
				JSONObject json = Util.parseJson(context.getFacebook().request("me"));
				String firstName = json.getString("first_name");
				String lastName = json.getString("last_name");
				facebookData.setText("Facebook session valid:\n\t" + firstName + " " + lastName + "\n");
				facebookData.setVisibility(TextView.VISIBLE);
			} catch (Exception error) {
				Toast.makeText(getBaseContext(), error.toString(), Toast.LENGTH_SHORT).show();
			}
		}
	}

	private void setupEmail() {
		// Setup email test
		emailData = (TextView) findViewById(R.id.textViewEmailData);
		if (context.isEmailSessionValid()) {
			try {
				String email = context.getUser().getEmail();
				String username = context.getUser().getUsername();
				emailData.setText("Email session valid:\n\t" + "Username: " + username + "\n\t" + "Email: " + email);
				emailData.setVisibility(TextView.VISIBLE);
			} catch (Exception error) {
				Toast.makeText(getBaseContext(), error.toString(), Toast.LENGTH_SHORT).show();
			}
		}
	}

	/*
	 * Notification test
	 */
	private OnClickListener notificationListener = new OnClickListener() {
		
		public void onClick(View v) {
			new NotificationHelper(getBaseContext(), R.drawable.header_foreground, "Game Time", "Join a huddle!", HomeActivity.class);
		}
	};

	/*
	 * Menu Listener
	 */
	private OnItemClickListener mainListener = new OnItemClickListener() {
		@Override
		public void onItemClick(AdapterView<?> adap, View view, int pos,
				long id) {
			
			String option = (String)((TextView)view).getText().toString();
			
			if (option.equals("Settings"))
				startActivity(new Intent(HomeActivity.this, SettingsActivity.class));
			
			else if (option.equals("Friends"))
				startActivity(new Intent(HomeActivity.this, FriendsActivity.class));
			
			else if (option.equals("Profile"))
				startActivity(new Intent(HomeActivity.this, SettingsActivity.class));
			
			else startActivity(new Intent(HomeActivity.this, SettingsActivity.class));	
		}
	};
	

	/*
	 * Override back button for confirmed exit
	 */
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		// Handle the back button
		if (context.getPreferences().getBoolean(getString(R.string.confirmQuit), true) && keyCode == KeyEvent.KEYCODE_BACK) {
			// Ask the user if they want to quit
			new AlertDialog.Builder(this).setIcon(android.R.drawable.ic_dialog_alert).setTitle(R.string.dialog_quit).setMessage(R.string.dialog_confirm)
					.setPositiveButton(R.string.dialog_positive, new DialogInterface.OnClickListener() {
						public void onClick(DialogInterface dialog, int which) {
							// Stop the activity
							finish();
						}
					}).setNegativeButton(R.string.dialog_negative, null).show();
			return true;
		} else {
			return super.onKeyDown(keyCode, event);
		}
	}

	/*
	 * On later activity results
	 */
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if (requestCode == CHOICE_SETTINGS) {
			if (resultCode == RESULT_LOGOUT) {
				// Finish activity on logout
				finish();
			}
		}
	}

}
