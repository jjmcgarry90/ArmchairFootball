package org.gtri.espn;

import org.gtri.objects.User;

import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

/*
 * The user must enter a user name to proceed
 */
public class LoginUsernameActivity extends Activity {

	private ArmchairQuarterbackApplication context;
	private Button buttonCancel, buttonSave;
	private EditText editTextUsername;
	private String email, username;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_activity_login_username);
		context = (ArmchairQuarterbackApplication) getApplicationContext();
		
		buttonCancel = (Button) findViewById(R.id.buttonCancel);
		buttonCancel.setOnClickListener(cancelListener);

		buttonSave = (Button) findViewById(R.id.buttonSave);
		buttonSave.setOnClickListener(saveListener);
		
		editTextUsername = (EditText) findViewById(R.id.editTextUsername);
		email = LoginEmailActivity.email;
	}
	
	/*
	 * Cancel
	 */
	private OnClickListener cancelListener = new OnClickListener() {
		@Override
		public void onClick(View v) {
			// Force to go back to email login screen
			setResult(RESULT_CANCELED);
			finish();
		}
	};

	/*
	 * Save
	 */
	private OnClickListener saveListener = new OnClickListener() {
		@Override
		public void onClick(View v) {
			// TODO - check if user name is valid
			username = editTextUsername.getText().toString();
			if (isValidUsername(username)) {
				save();
				context.setUser(new User(email, username));
				Intent intent = new Intent(getBaseContext(), HomeActivity.class);
				startActivity(intent);
				// Finish and send results
				setResult(RESULT_OK);
				finish();
			}
		}
	};
	
	/*
	 * Checks validity of the username
	 */
	private boolean isValidUsername(String str) {
		// TODO - check string for validity (sql injections, formatting, etc.)
		if (str == null || str.equals("")) {
			Toast.makeText(getBaseContext(), "Invalid username.", Toast.LENGTH_LONG).show();
			return false;
		} 
		// TODO - check database for uniqueness
		if (!isUnique(str)) {
			Toast.makeText(getBaseContext(), "Username taken.", Toast.LENGTH_LONG).show();
			return false;
		}
		return true;
	}
	
	/*
	 * Checks if a username is unique
	 */
	private boolean isUnique(String str) {
		// TODO - query server for string uniqueness
		return true;
	}
	
	/*
	 * Save the username and email settings
	 */
	public void save() {
		// TODO - also save on server so other users won't use same email address or username
		SharedPreferences.Editor ed = context.getPreferences().edit();
		ed.putString(getString(R.string.settingsEmail), email);
		ed.putString(getString(R.string.settingsUsername), username);
		ed.commit();
	}

}
