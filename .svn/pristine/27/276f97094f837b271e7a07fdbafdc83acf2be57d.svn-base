package org.gtri.espn.activities.general;

import java.util.Random;

import org.gtri.espn.R;
import org.gtri.espn.activities.main.FanbookApplication;
import org.gtri.objects.Huddle;
import org.gtri.objects.User;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class HuddleActivity extends Activity {

	private FanbookApplication context;
	private Huddle huddle;
	private TextView textViewTitle;
	private Button buttonInviteFriend, buttonInviteGroup;
	private HuddleListAdapter adapter;
	private ListView list;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_general_huddle);
		context = (FanbookApplication) getApplicationContext();
		huddle = (Huddle) getIntent().getParcelableExtra("huddle");
		huddle = context.getUser().getHuddleByName(huddle.getName());

		textViewTitle = (TextView) findViewById(R.id.textViewTitle);
		textViewTitle.setText(huddle.getName());

		buttonInviteFriend = (Button) findViewById(R.id.buttonInviteFriend);
		buttonInviteFriend.setOnClickListener(inviteFriendListener);
		buttonInviteGroup = (Button) findViewById(R.id.buttonInviteGroup);
		buttonInviteGroup.setOnClickListener(inviteGroupListener);

		adapter = new HuddleListAdapter();
		list = (ListView)findViewById(R.id.listView);
		list.setAdapter(adapter);
		
		TextView emptyView = (TextView)findViewById(R.id.textViewEmpty);
		list.setEmptyView(emptyView);
	}

	/*
	 * Invite friend listener
	 */
	private OnClickListener inviteFriendListener = new OnClickListener() {
		public void onClick(View v) {
			// TODO - actually add a friend by launching an add friend dialog
			if (context.getUser().getFriendsList().size() != 0) {
				Random r = new Random();
				int num = r.nextInt(context.getUser().getFriendsList().size());
				huddle.addMember(context.getUser().getFriendsList().get(num));
				adapter.notifyDataSetChanged();
			} else {
				Toast.makeText(getBaseContext(), "No friends!", Toast.LENGTH_SHORT).show();
			}
		}
	};

	/*
	 * Invite group listener
	 */
	private OnClickListener inviteGroupListener = new OnClickListener() {
		public void onClick(View v) {
			// TODO - actually invite a group by selecting the user's group
			if (context.getUser().getGroups().size() != 0) {
				Random r = new Random();
				int num = r.nextInt(context.getUser().getGroups().size());
				huddle.addMembers(context.getUser().getGroups().get(num).getMembers());
				adapter.notifyDataSetChanged();
			} else {
				Toast.makeText(getBaseContext(), "No groups!", Toast.LENGTH_SHORT).show();
			}
		}
	};

	/*
	 * Custom adapter class
	 */
	private class HuddleListAdapter extends ArrayAdapter<User> {

		private HuddleListAdapter() {
			super(HuddleActivity.this, R.layout.list_item_generic, huddle.getMembers());
		}

		public View getView(final int position, View convertView, ViewGroup parent) {
			View row;
			if (convertView == null) {
				LayoutInflater inflater = getLayoutInflater();
				row = inflater.inflate(R.layout.list_item_generic, parent, false);
			} else {
				row = convertView;
			}
			TextView tv = (TextView) row.findViewById(R.id.text);
			tv.setText(getItem(position).getName());
			tv.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					Intent intent = new Intent(getBaseContext(), FriendInfoActivity.class);
					intent.putExtra("grofriendup", getItem(position));
					startActivity(intent);
				}
			});
			ImageButton btn = (ImageButton) row.findViewById(R.id.button);
			btn.setImageResource(R.drawable.ic_menu_blocked_user);
			btn.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					huddle.removeMember(getItem(position));
					adapter.notifyDataSetChanged();
				}
			});
			return row;
		}
	}
	
	/*
	 * Force reload of screen data
	 */
	protected void onResume() {
		super.onResume();
		adapter.notifyDataSetChanged();
	}

}
